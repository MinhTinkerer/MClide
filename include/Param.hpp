//!
//! @file 			Param.hpp
//! @author 		Geoffrey Hunter <gbmhunter@gmail.com> (www.mbedded.ninja)
//! @created		2013-04-02
//! @last-modified 	2014-10-08
//! @brief 		 
//! @details
//!				See README.rst in root dir for more info.

#ifndef __cplusplus
	#error Please build with C++ compiler
#endif

//===============================================================================================//
//======================================== HEADER GUARD =========================================//
//===============================================================================================//

#ifndef MCLIDE_PARAM_H
#define MCLIDE_PARAM_H

//===============================================================================================//
//==================================== FORWARD DECLARATION ======================================//
//===============================================================================================//

namespace MbeddedNinja
{
	namespace MClideNs
	{
		class Param;
	}
}

//===============================================================================================//
//========================================== INCLUDES ===========================================//
//===============================================================================================//

//===== SYSTEM LIBRARIES =====//
#include <MString/api/MStringApi.hpp>

//===== USER SOURCE =====//
#include "Config.hpp"

//===============================================================================================//
//======================================== NAMESPACE ============================================//
//===============================================================================================//

namespace MbeddedNinja
{
	namespace MClideNs
	{

		//! @brief		Holds all parameter variables
		//! @details	Object of this type is passed into Rx.RegisterParam() or Tx.Register.Param().
		class Param
		{
			public:
			
				//===============================================================================================//
				//==================================== CONSTRUCTORS/DESTRUCTOR ==================================//
				//===============================================================================================//

				//! @brief		Generic constructor.
				Param(bool (*callBackFunc)(char *paramVal), MString description);

				//! @brief		Simplified constructor.
				//! @details	Automatically sets the function pointer to NULL.
				Param(MString description);

				//! @brief		Destructor.
				//! @details	Deallocates memory.
				~Param();

				//===============================================================================================//
				//========================================= PUBLIC METHODS ======================================//
				//===============================================================================================//

				// none

				//===============================================================================================//
				//======================================= PUBLIC VARIABLES ======================================//
				//===============================================================================================//

				//! @brief		Description of a parameter. Used with the "-h", "--help" flags.
				MString description;

				//! @brief		String value of parameter.
				//! @note		Parameters have no names
				MString value;

				//! @brief		Optional callback function for when parameter is discovered.
				//! @details	Function is called before the callback function for the command that it
				//! 			was sent in is called.
				bool (*callBackFunc)(char* paramVal);

			private:
			
				//! @brief		Common code for constructors
				void Init(bool (*callBackFunc)(char *paramVal), MString description);
		};

		//===============================================================================================//
		//==================================== PUBLIC DEFINES ===========================================//
		//===============================================================================================//

		// none

		//===============================================================================================//
		//=================================== PUBLIC TYPEDEFS ===========================================//
		//===============================================================================================//

		// none

		//===============================================================================================//
		//================================== PUBLIC VARIABLES/STRUCTURES ================================//
		//===============================================================================================//

		// none

		//===============================================================================================//
		//=================================== PUBLIC FUNCTION PROTOTYPES ================================//
		//===============================================================================================//


	} // namespace Clide
} // namespace MbeddedNinja

#endif	// #ifndef MCLIDE_PARAM_H

// EOF
