//!
//! @file 			Tx.hpp
//! @author 		Geoffrey Hunter <gbmhunter@gmail.com> (www.mbedded.ninja)
//! @created		2012/03/19
//! @last-modified 	2014/01/14
//! @brief 			Clide TX controller. The main logic of the TX (sending)	part of Clide.
//! @details
//!					See README.rst in repo root dir for more info.

#ifndef __cplusplus
	#error Please build with C++ compiler
#endif

//===============================================================================================//
//======================================== HEADER GUARD =========================================//
//===============================================================================================//

#ifndef CLIDE_TX_H
#define CLIDE_TX_H

//===============================================================================================//
//========================================== INCLUDES ===========================================//
//===============================================================================================//

// System
#include <stdint.h>

// User
#include "Config.hpp"
#include "Comm.hpp"

//===============================================================================================//
//======================================== NAMESPACE ============================================//
//===============================================================================================//

namespace Clide
{

	//! @brief		This class is used for transmitting commands. Commands can be registered with Clide::Tx in the same way they can be for Clide::Rx.
	//! @details	So far nothing has been implemented for Clide::Tx, as it is usually easier just to hand-type the command to send.
	class Tx : public Comm
	{
		
		public:
		
			//===============================================================================================//
			//======================================== CONSTRUCTOR ==========================================//
			//===============================================================================================//
			
			//! @brief		Constructor
			Tx();
			
			//===============================================================================================//
			//=================================== PUBLIC FUNCTION PROTOTYPES ================================//
			//===============================================================================================//
			
			// none
			
			//===============================================================================================//
			//================================== PUBLIC VARIABLES/STRUCTURES ================================//
			//===============================================================================================//
			
		private:

			// none
	};

} // namespace Clide

#endif	// #ifndef CLIDE_TX_H

// EOF
